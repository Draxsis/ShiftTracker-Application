@page "/"
@using System.Timers

<h1 class="text-center mt-5">Shift Timer</h1>

<div class="text-center mt-5">
    @if (!shiftStarted)
    {
        <button class="btn btn-primary btn-lg" @onclick="StartShift">Start Shift</button>
    }
    else
    {
        <h3>Shift ends at: @endTime.ToString("HH:mm")</h3>
        <h4>Remaining: @remainingTime</h4>
        <button class="btn btn-danger mt-3" @onclick="ResetShift">Reset</button>
    }
</div>

@code {
    private bool shiftStarted = false;
    private DateTime startTime;
    private DateTime endTime;
    private string remainingTime = "";
    private System.Timers.Timer timer;

    void StartShift()
    {
        startTime = DateTime.Now;
        endTime = startTime.AddHours(8).AddMinutes(45);
        shiftStarted = true;

        timer = new System.Timers.Timer(1000); // Update every second
        timer.Elapsed += UpdateRemainingTime;
        timer.Start();
    }

    void ResetShift()
    {
        shiftStarted = false;
        timer?.Stop();
        remainingTime = "";
    }

    void UpdateRemainingTime(object sender, ElapsedEventArgs e)
    {
        var now = DateTime.Now;
        var timeLeft = endTime - now;

        if (timeLeft.TotalSeconds <= 0)
        {
            remainingTime = "Shift completed!";
            timer?.Stop();
        }
        else
        {
            remainingTime = timeLeft.ToString(@"hh\:mm\:ss");
            InvokeAsync(StateHasChanged); // Refresh UI
        }
    }
}
